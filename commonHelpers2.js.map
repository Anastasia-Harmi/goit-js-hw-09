{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const feedbackFormEl = document.querySelector('.feedback-form'); //1.шукаю елемент на сторінці\nlet formData = {\n  email: '',\n  message: '',\n};\n\n// 5.Дістаю дані з локал схов. Створюю для цього ф-ію\n\nconst fillFormFields = () => {\n  const formDataFromLS = JSON.parse(\n    localStorage.getItem('feedback-form-state')\n  ); //в змінну запис знач з лок сховщ по ключу\n\n  if (formDataFromLS === null) {\n    //якщо поля пусті, то там не вводилось нічого і витягати нема що і лежить null, тому виходим з ф-ії\n    return;\n  }\n  formData = formDataFromLS;\n\n  for (const key in formDataFromLS) {\n    //перебираємо обєкт із лок схов і нижче перевірка чи власна властивість, якщо так, то\n    if (formDataFromLS.hasOwnProperty(key)) {\n      feedbackFormEl.elements[key].value = formDataFromLS[key]; //всередині форми зверт до ключа, щоб зчитавзнач ключа, а не створив новий ключ і далі до його значення зверт і перезаписуєм на те , що перебир по ключу\n    }\n  }\n};\nfillFormFields(); // виклик ф-ії\n\n//3.Створюю ф-ію обробник події input\nconst onFormFieldChange = event => {\n  const fieldName = event.target.name; //в цю змінну записую назву поля , де відбулась подія, так як є атрибут name ,який вказує на тип поля і він записується як ключ\n  const fieldValue = event.target.value; //в цю змінну записую значення введене юзером у полі\n  formData[fieldName] = fieldValue; //formData[fieldName] це назва ключа, а саме тип поля в якому вводить юзер. fieldValue - значення цього ключа\n\n  //4. Записуємо об'єкт у сховище локальне(те, що зберігає інформацію і після перезавантажень)\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData)); //'feedback-form-state'-назву ключа для лок.схов. я придумую сама, приводжу до рядка наш об'єкт з даними з полів, бо лок сховище приймає лише рядки\n};\n\n//6.функція обробник для кнопки відправки(submit)\n\nconst onFeedbackFormSubmit = event => {\n  event.preventDefault(); //відмінила дію за замовч браузера\n  const email = formData.email.trim();\n  const message = formData.message.trim();\n\n  if (email === '' || message === '') {\n    alert('Fill please all fields');\n    return;\n  }\n  event.target.reset();\n  localStorage.removeItem('feedback-form-state');\n  console.log(formData);\n};\n\nfeedbackFormEl.addEventListener('input', onFormFieldChange); // 2.додаю слухача на поля введення, подія input (створюється щоразу при зміні значення в полі)\nfeedbackFormEl.addEventListener('submit', onFeedbackFormSubmit);\n"],"names":["feedbackFormEl","formData","fillFormFields","formDataFromLS","key","onFormFieldChange","event","fieldName","fieldValue","onFeedbackFormSubmit","email","message"],"mappings":"wFAAA,MAAMA,EAAiB,SAAS,cAAc,gBAAgB,EAC9D,IAAIC,EAAW,CACb,MAAO,GACP,QAAS,EACX,EAIA,MAAMC,EAAiB,IAAM,CAC3B,MAAMC,EAAiB,KAAK,MAC1B,aAAa,QAAQ,qBAAqB,CAC9C,EAEE,GAAIA,IAAmB,KAIvB,CAAAF,EAAWE,EAEX,UAAWC,KAAOD,EAEZA,EAAe,eAAeC,CAAG,IACnCJ,EAAe,SAASI,CAAG,EAAE,MAAQD,EAAeC,CAAG,GAG7D,EACAF,IAGA,MAAMG,EAAoBC,GAAS,CACjC,MAAMC,EAAYD,EAAM,OAAO,KACzBE,EAAaF,EAAM,OAAO,MAChCL,EAASM,CAAS,EAAIC,EAGtB,aAAa,QAAQ,sBAAuB,KAAK,UAAUP,CAAQ,CAAC,CACtE,EAIMQ,EAAuBH,GAAS,CACpCA,EAAM,eAAc,EACpB,MAAMI,EAAQT,EAAS,MAAM,KAAI,EAC3BU,EAAUV,EAAS,QAAQ,KAAI,EAErC,GAAIS,IAAU,IAAMC,IAAY,GAAI,CAClC,MAAM,wBAAwB,EAC9B,MACD,CACDL,EAAM,OAAO,QACb,aAAa,WAAW,qBAAqB,EAC7C,QAAQ,IAAIL,CAAQ,CACtB,EAEAD,EAAe,iBAAiB,QAASK,CAAiB,EAC1DL,EAAe,iBAAiB,SAAUS,CAAoB"}